{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(mkdir:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm install)",
      "Bash(npm run dev:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(npx husky:*)",
      "Bash(start http://localhost:3000)",
      "Bash(curl:*)",
      "Bash(if [ -f \"C:/Users/victo/OneDrive/Documents/Data_Science_Projects/vidibemus_ai_website/.env.local\" ])",
      "Bash(then echo \"Environment file exists\")",
      "Bash(else echo \"No .env.local file found\")",
      "Bash(fi)",
      "Bash(psql:*)",
      "Bash(winget:*)",
      "Bash(docker:*)",
      "Bash(cat:*)",
      "Bash(npx prisma generate:*)",
      "Bash(timeout:*)",
      "Bash(npx prisma:*)",
      "Bash(npm run:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(set DATABASE_URL=postgresql://vidibemus:wELgDZqaCzOQymdl8Jwh0hEOCboCeF0Vfsxll5Zx4h0=@localhost:5432/vidibemus_ai)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(if [ -f \".env.local\" ])",
      "Bash(start http://localhost:3005)",
      "Bash(pkill:*)",
      "Bash(start http://localhost:3007)",
      "Bash(start http://localhost:3009/ai)",
      "Bash(start http://localhost:3010)",
      "Bash(taskkill:*)",
      "Bash(start http://localhost:3001)",
      "Bash(cmd /c start http://localhost:3001)",
      "Bash(explorer \"http://localhost:3001\")",
      "Bash(fuser:*)",
      "Bash(powershell:*)",
      "Bash(start http://localhost:3003)",
      "Bash(start http://localhost:3004)",
      "Bash(npm update:*)",
      "Bash(start http://localhost:3006)",
      "Bash(grep:*)",
      "Bash(start http://localhost:3008)",
      "Bash(npx next dev:*)",
      "Bash(start http://localhost:3009)",
      "Bash(start http://localhost:3000/ai)",
      "WebSearch",
      "Bash(/dev/null)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(tree:*)",
      "Bash(gh:*)",
      "Bash(git remote remove:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)"
    ],
    "deny": [],
    "ask": []
  }
}