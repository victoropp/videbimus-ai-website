version: '3.8'

services:
  app:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: vidibemus-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - vidibemus-network
    volumes:
      - app-uploads:/app/public/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: vidibemus-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=vidibemus
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=vidibemus_ai
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vidibemus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vidibemus -d vidibemus_ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vidibemus-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vidibemus-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: vidibemus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-sites:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/ssl/certs:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - vidibemus-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  backup:
    image: postgres:15-alpine
    container_name: vidibemus-backup
    restart: unless-stopped
    environment:
      - POSTGRES_USER=vidibemus
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=vidibemus_ai
    volumes:
      - ./backup:/backup
      - ../scripts/backup.sh:/scripts/backup.sh:ro
    command: /bin/sh -c "while true; do /scripts/backup.sh; sleep 86400; done"
    depends_on:
      - postgres
    networks:
      - vidibemus-network

networks:
  vidibemus-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  app-uploads:
  nginx-cache: