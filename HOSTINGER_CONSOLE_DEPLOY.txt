#!/bin/bash
# HOSTINGER WEB CONSOLE DEPLOYMENT SCRIPT
# Copy and paste this entire script into the Hostinger web console

# First, ensure SSH is properly configured
sed -i 's/#Port 22/Port 22/' /etc/ssh/sshd_config
sed -i 's/#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
systemctl restart sshd

# Quick deployment
apt update -y
apt install -y nodejs npm git postgresql redis-server nginx

# Install PM2
npm install -g pm2

# Database setup
sudo -u postgres psql -c "CREATE USER vidibemus WITH PASSWORD 'fb671b96bdd3463085f9dfd645af44d4';"
sudo -u postgres psql -c "CREATE DATABASE vidibemus_ai OWNER vidibemus;"

# Redis setup
echo "requirepass 1405675dc0d791fb76726d61c8959938" >> /etc/redis/redis.conf
systemctl restart redis

# Create app user
useradd -m vidibemus || true
mkdir -p /var/www/vidibemus
chown vidibemus:vidibemus /var/www/vidibemus

# Clone app
cd /var/www/vidibemus
sudo -u vidibemus git clone https://github.com/victoropp/videbimus-ai-website.git .

# Environment setup
cat > .env.local << 'EOF'
NODE_ENV=production
NEXT_PUBLIC_APP_URL=http://31.97.117.30
NEXTAUTH_URL=http://31.97.117.30
NEXTAUTH_SECRET=CopY9fhWSKvxd7TAsaVFfT/oqbnG6LcJ4cx89OVJmqw=
DATABASE_URL=postgresql://vidibemus:fb671b96bdd3463085f9dfd645af44d4@localhost:5432/vidibemus_ai
REDIS_URL=redis://:1405675dc0d791fb76726d61c8959938@localhost:6379
JWT_SECRET=3d8f72a9b4c5e6f1827394a0b5c6d7e8
ENCRYPTION_KEY=f47ac10b58cc4372a5670e02b2c3d479
EOF

chown vidibemus:vidibemus .env.local

# Build app
sudo -u vidibemus npm install
sudo -u vidibemus npx prisma generate
sudo -u vidibemus npm run build

# PM2 setup
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [{
    name: 'vidibemus',
    script: 'npm',
    args: 'start',
    cwd: '/var/www/vidibemus'
  }]
};
EOF

sudo -u vidibemus pm2 start ecosystem.config.js
sudo -u vidibemus pm2 save

# Nginx setup
cat > /etc/nginx/sites-available/default << 'EOF'
server {
    listen 80;
    server_name _;
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

systemctl restart nginx

# Open firewall
ufw allow 22
ufw allow 80
ufw allow 443
ufw --force enable

echo "✅ DEPLOYMENT COMPLETE!"
echo "🌐 Your site is now available at: http://31.97.117.30"
echo "📊 Check status with: pm2 status"